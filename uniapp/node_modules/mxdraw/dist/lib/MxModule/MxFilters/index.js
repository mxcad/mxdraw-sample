export default class MxFilters{constructor(){this.uniformObj={},this.filtersStr="",this.filtersTypes="",this.VSHADER_SOURCE="\n  varying vec2 v_Uv; \n  void main () {\n      v_Uv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }\n  ",this.FSHADER_SOURCE=`\n  varying vec2 v_Uv;\n  uniform sampler2D e_Texture;\n  uniform mat4 colorMatrix;\n  ${this.filtersStr}\n  void main () {\n    vec4 color = texture2D( e_Texture, v_Uv );\n    color = color * colorMatrix;\n    ${this.filtersTypes}\n    gl_FragColor = color;\n  }`,this._matrix=new THREE.Matrix4}channel({r:t=1,g:r=1,b:i=1}){return this._matrix=(new THREE.Matrix4).set(t,0,0,0,0,r,0,0,0,0,i,0,0,0,0,1).multiply(this._matrix),this}brightness(t){return this._matrix=(new THREE.Matrix4).set(t,0,0,0,0,t,0,0,0,0,t,0,0,0,0,1).multiply(this._matrix),this}saturate(t){const r=.2126*(1-t),i=.7152*(1-t),e=.0722*(1-t);return this._matrix=(new THREE.Matrix4).set(r+t,i,e,0,r,i+t,e,0,r,i,e+t,0,0,0,0,1).multiply(this._matrix),this}contrast(t){const r=.5*(1-t);return this._matrix=(new THREE.Matrix4).set(t,0,0,0,0,t,0,0,0,0,t,0,r,r,r,1).multiply(this._matrix),this}opacity(t){return this._matrix=(new THREE.Matrix4).set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,t).multiply(this._matrix),this}invert(t){const r=1-2*t;return this._matrix=(new THREE.Matrix4).set(r,0,0,0,0,r,0,0,0,0,r,0,t,t,t,1).multiply(this._matrix),this}grayscale(t=1){const r=.2126*t,i=.7152*t,e=.0722*t;return this._matrix=(new THREE.Matrix4).set(r+1-t,i,e,0,r,i+1-t,e,0,r,i,e+1-t,0,0,0,0,1).multiply(this._matrix),this}sepia(t=1){return this._matrix=(new THREE.Matrix4).set(1-.607*t,.769*t,.189*t,0,.349*t,1-.314*t,.168*t,0,.272*t,.534*t,1-.869*t,0,0,0,0,1).multiply(this._matrix),this}hueRotate(t){const r=t/180*Math.PI,i=Math.cos(r),e=Math.sin(r);return this._matrix=(new THREE.Matrix4).set(.2126+.7874*i+-.2126*e,.7152+-.7152*i+-.7152*e,.0722+-.0722*i+.9278*e,0,.2126+-.2126*i+.143*e,.7152+i*(1-.7152)+.14*e,.0722+-.0722*i+-.283*e,0,.2126+-.2126*i+-.7874*e,.7152+-.7152*i+.7152*e,.0722+.9278*i+.0722*e,0,0,0,0,1).multiply(this._matrix),this}convolution(t,r=1/9,i=521){return this.uniformObj=Object.assign(Object.assign({},this.uniformObj),{cKernel:{value:t.toArray()},stStep:{value:r},scaleFactor:{value:i}}),this.filtersTypes.indexOf("convolutionTextureColor")<0&&(this.filtersStr+="\n        uniform float cKernel[9];\n        uniform float stStep;\n        uniform float scaleFactor;\n        vec4 convolutionTextureColor(vec4 color) {\n            vec2 offsets[9];\n            offsets[0] = vec2(-1.0,-1.0);\n            offsets[1] =  vec2(0.0,-1.0);\n            offsets[2] = vec2(1.0,-1.0);\n            offsets[3] =  vec2(-1.0,0.0);\n            offsets[4] = vec2(0.0,0.0);\n            offsets[5] = vec2(1.0,0.0);\n            offsets[6] =  vec2(-1.0,1.0);\n            offsets[7] = vec2(0.0,1.0);\n            offsets[8] = vec2(1.0,1.0);\n        \n            vec4 sum = color;\n            for(int i = 0; i < 9; i++) {\n                sum = sum + cKernel[i] * scaleFactor * texture2D(e_Texture, v_Uv + offsets[i] / stStep);\n            };\n            return sum;\n        }",this.filtersTypes+="color = convolutionTextureColor(color);\n"),this}reset(){return this.uniformObj={},this.filtersStr="",this.filtersTypes="",this._matrix=new THREE.Matrix4,this}_getFilterShaderData(t){return{uniforms:Object.assign({e_Texture:{value:t},colorMatrix:{value:this._matrix}},this.uniformObj),vertexShader:this.VSHADER_SOURCE,fragmentShader:this.FSHADER_SOURCE}}_getFilterColor(t="#000000",r=1){t=new THREE.Color(t);let{r:i,g:e,b:s}=t;const n=this._matrix.toArray(),o=(n[12],n[13],n[14],n[15],n[0]*i+n[1]*i+n[2]*i+n[3]*r),a=n[4]*e+n[5]*e+n[6]*e+n[7]*r,l=n[8]*s+n[9]*s+n[10]*s+n[11]*r;return t.setRGB(o,a,l),t}toJSON(){return JSON.stringify({matrix:this._matrix.toArray(),uniformObj:this.uniformObj,filtersStr:this.filtersStr,filtersTypes:this.filtersTypes})}static fromJSON(t){const{matrix:r,uniformObj:i,filtersStr:e,filtersTypes:s}=JSON.parse(t),n=new MxFilters;return n._matrix=(new THREE.Matrix4).fromArray(r),n.uniformObj=i,n.filtersStr=e,n.filtersTypes=s,n}};