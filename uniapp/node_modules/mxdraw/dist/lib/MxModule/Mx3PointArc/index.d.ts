import McGiWorldDraw from "../McGiWorldDraw";
import MxDbCircleShape from "../MxDbCircleShape";
import drawMx3PointArc from "./draw";
/** 三点动态绘制圆弧 point1圆弧起始点 point2是圆弧结束点, point3圆弧任意一点  */
declare class Mx3PointArc extends MxDbCircleShape {
    static cmd: string;
    static draw: typeof drawMx3PointArc;
    constructor();
    point1: import("three").Vector3;
    point2: import("three").Vector3;
    point3: import("three").Vector3;
    /** 自动确定顺逆时针绘制 */
    autoClockwise: boolean;
    getTypeName(): string;
    create(): Mx3PointArc;
    worldDraw(pWorldDraw: McGiWorldDraw): void;
    getGripPoints(): THREE.Vector3[];
    /** 计算三个控制点的角度 */
    compute3PointAngle(): number[];
    /** 根据三个控制点更新圆心 */
    upDateCenter(point1: THREE.Vector3, point2: THREE.Vector3, point3: THREE.Vector3): import("three").Vector3;
    /** 根据圆心和一个控制点自动更新半径大小 */
    upDateRadius(point: THREE.Vector3): number;
    /** 根据 三个控制点到圆心的角度  更新顺逆时针绘制 */
    upDataClockwise(angle1: number, angle2: number, angle3: number): void;
    moveGripPointsAt(index: number, offset: THREE.Vector3): boolean;
}
export default Mx3PointArc;
