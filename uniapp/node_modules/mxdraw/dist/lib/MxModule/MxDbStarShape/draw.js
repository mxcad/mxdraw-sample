var __awaiter=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))(function(o,i){function a(t){try{w(n.next(t))}catch(t){i(t)}}function c(t){try{w(n.throw(t))}catch(t){i(t)}}function w(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(a,c)}w((n=n.apply(t,e||[])).next())})};import{MxDbStarShapeDraw}from".";import McEdGetPointWorldDrawObject from"../McEdGetPointWorldDrawObject";import MrxDbgUiPrPoint from"../MrxDbgUiPrPoint";import MxFun from"../MxFun";export default function drawMxDbStarShape(){const t=new MrxDbgUiPrPoint,e=MxFun.getCurrentDraw(),r=new McEdGetPointWorldDrawObject;t.setUserDraw(r);const n=new McEdGetPointWorldDrawObject,o=new MxDbStarShapeDraw;t.setUserDraw(n),t.setMessage("\n确定圆弧开始点:"),t.go(r=>__awaiter(this,void 0,void 0,function*(){o.center=t.value(),n.setDraw(t=>{o.innerPoint=t,n.drawCircle(o.center,o.center.distanceTo(t))}),o.innerPoint=(yield t.go())||new THREE.Vector3,n.setDraw(t=>{o.outerPoint=t,n.drawCustomEntity(o)}),o.outerPoint=(yield t.go())||new THREE.Vector3,e.addMxEntity(o)}))};