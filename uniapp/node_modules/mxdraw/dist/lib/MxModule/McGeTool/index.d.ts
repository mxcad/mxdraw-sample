/** @module McGeTool */
import McGePoint3d from '../McGePoint3d';
import McGePoint3dArray from '../McGePoint3dArray';
/**
 * McGeTool
 * @example ```typescript
 * ```
 */
declare class McGeToolClass {
    private mxgeTool;
    private initImp;
    /**
     * 计算闭合的区域面积
     * @param aryPoint 构成区域面积的顶点位置集合
     * @return number
     * @example
     * ```
     */
    calcArea(aryPoint: McGePoint3dArray | THREE.Vector3[]): number;
    /**
     * 判断点是否在一个闭合的多边形区域。
     * @param pt 点的坐标位置
     * @param aryPoint 闭合多边形区域的顶点坐标集合
     * @return any
     * @example
     * ``` typescript
     *      let aryPoint:Array<THREE.Vector3> = [];
     *      aryPoint.push(new THREE.Vector3(0,0,0));
     *      aryPoint.push(new THREE.Vector3(0,100,0));
     *      aryPoint.push(new THREE.Vector3(100,100,0));
     *      aryPoint.push(new THREE.Vector3(100,0,0));
     *      let pt:THREE.Vector3 = new THREE.Vector3(150,150);
     *      if(McGeTool.pointInPolyline(pt,aryPoint) ){
     *        console.log("in");
     *      }
     * ```
     */
    pointInPolyline(pt: McGePoint3d, aryPoint: McGePoint3dArray | THREE.Vector3[]): boolean;
}
declare const McGeTool: McGeToolClass;
export default McGeTool;
