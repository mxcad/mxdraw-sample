import MxDbEntity from '../MxDbEntity';
import MxFilters from '../MxFilters';
import McGiWorldDraw from '../McGiWorldDraw';
import drawMxDbRect from './draw';
/**
 * MxRectEntity 矩形对象.
 */
declare class MxDbRect extends MxDbEntity {
    static cmd: string;
    static draw: typeof drawMxDbRect;
    private cornerRadius;
    /**
     * pt1: 构成矩形的第一个点
     * */
    pt1: THREE.Vector3;
    /**
     * pt1: 构成矩形的第二个点(对角点)
     * */
    pt2: THREE.Vector3;
    /**
     * 是否需要颜色填充.
     * */
    isSolidColorFill: boolean;
    /**
     * fillImageParam 填充背景图片的参数设置(如果使用了滤镜则部分参数功能失效)
     * */
    private fillImageParam;
    /**
     * 设置滤镜对象{@link MxFilters} 默认为undefined | null 则不使用该滤镜效果
     * */
    private filter;
    /**
     * fillImageSrc(优先级低于fillColor属性) 填充背景图片的地址
     * */
    private fillImageSrc;
    private isLoadMaterialFromPath;
    private material;
    worldDraw(pWorldDraw: McGiWorldDraw): void;
    getGripPoints(): Array<THREE.Vector3>;
    moveGripPointsAt(index: number, offset: THREE.Vector3): boolean;
    dwgIn(obj: any): boolean;
    dwgOut(obj: any): object;
    create(): MxDbRect;
    transformBy(mat: THREE.Matrix4): void;
    /**
     * setRadius 设置圆角 圆角的半径  如[3, 2, 1, 4]分别对应左上角圆角半径3  右上角2  右下角1 左下角4
     * @param { number | number[] } radius 圆角半径 为数组时[3, 2, 1, 4]分别对应左上角圆角半径3  右上角2  右下角1 左下角4； 或者直接设置半径值 则四个角统一半径
     * */
    setRadius(radius: number | number[], isScreenCoord?: boolean): void;
    getTypeName(): string;
    /** 获取当前滤镜对象 {@link MxFilters} */
    getFilter(): MxFilters | undefined | null;
    /** 设置当前滤镜对象
     * @param filter {@link MxFilters}
     *  */
    setFilter(filter: MxFilters | undefined | null): void;
    /** 设置填充的背景图片路径 */
    setFillImagePath(sPath: string | undefined): void;
    /** 获取填充的背景图片路径 */
    getFillImagePath(): string | undefined;
}
export default MxDbRect;
