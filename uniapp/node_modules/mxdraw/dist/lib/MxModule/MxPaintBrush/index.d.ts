import MxDbEntity from "../MxDbEntity";
import { MxColorType } from "../MxType";
export interface MxPaintBrushPropsType {
    /** 基础颜色 */
    color?: MxColorType;
    /** 渲染顺序 */
    renderOrder?: number;
    /** 透明度 */
    opacity?: number;
    /** 是否可见 */
    visible?: boolean;
    /** 线段宽度 */
    dLineWidth?: number;
    /** 线段宽度是否按照屏幕尺寸计算 */
    lineWidthByPixels?: boolean;
    /** 实线虚线总段数 破折号之间的长度和间距。
     * @describe
     * 0: 表示实线了, 0.1:有10段, 0.5:表示有两段 1: 有一段*/
    dashArray?: number;
    /** 虚线长度和实线长度的比率 (0 -全实线，1 -全虚线[不可见])
     * @describe
     * 例如取值为0.5, 虚线长度 / (实线长度 + 虚线长度) = 0.5,表示，实线与虚线长度相等*/
    dDashRatio?: number;
    /** 设置图层 */
    layer?: string;
    /** 自定义数据（必须保证JSON.parse(JSON.stringify(userData))不报错） */
    userData?: {
        [key: string]: any;
    };
    /** 其它自定义对象上的属性 */
    [propName: string]: any;
}
/** 自定义对象绘制时使用全局默认属性的画笔对象 */
declare const MxPaintBrush: {
    /** 获取当前的画笔属性 */
    getProps(): MxPaintBrushPropsType;
    /** 设置当前画笔属性 */
    setProps(props: MxPaintBrushPropsType): MxPaintBrushPropsType;
    /** 使用画笔设置自定义对象的默认属性
     * @param entity MxDbEntity类的实例
     *  */
    use(entity: MxDbEntity): MxDbEntity & MxPaintBrushPropsType;
};
export default MxPaintBrush;
