class MxVueComandLine{constructor(){this.msCmdText="",this.msCmdDisplay="",this.msCmdTip="",this.mUpDisplayFun=void 0,this.mxFunObject=void 0,this.mountUpDisplayFun=(t=>{this.mUpDisplayFun=t}),this.setCmdText=(t=>{this.msCmdText=t}),this.getCmdText=(()=>this.msCmdText),this.getCmdDisplay=(()=>this.msCmdDisplay),this.setCmdDisplay=(t=>{this.msCmdDisplay=t}),this.addCmdDisplay=(t=>{this.msCmdDisplay.length>1024?(this.msCmdDisplay=this.msCmdDisplay.substring(this.msCmdDisplay.length-1024,this.msCmdDisplay.length),this.msCmdDisplay=this.msCmdDisplay+t):this.msCmdDisplay=this.msCmdDisplay+t}),this.setCmdTip=(t=>{this.msCmdTip=t}),this.getCmdTip=(()=>this.msCmdTip)}upDisplay(){const{msCmdTip:t,msCmdDisplay:s,msCmdText:i}=this;void 0!=this.mUpDisplayFun&&this.mUpDisplayFun({msCmdTip:t,msCmdDisplay:s,msCmdText:i})}}const MxInputType={kNoInput:0,kXYCoordInput:1,kDistanceInput:2,kDynTip:3},MxInputPostionType={kRelative:0,kAbsolutely:1};class MxDynamicInput{constructor(){this.mType=MxInputType.kNoInput,this.mPos=[0,0],this.mTip="",this.mValue1="",this.mValue1Pos=[0,0],this.mValue2="",this.mValue2Pos=[0,0],this.misShow=!1,this.mOnKeydownEvent=void 0,this.mFocusValue="",this.setFocusValue=(t=>{this.mFocusValue=t}),this.getFocusValue=(()=>this.mFocusValue),this.mountKeydownEvent=(t=>{this.mOnKeydownEvent=t}),this.onKeydown=(t=>{void 0!=this.mOnKeydownEvent&&this.mOnKeydownEvent(t)}),this.setType=(t=>{this.mType=t}),this.getType=(()=>this.mType),this.isShow=(()=>this.misShow),this.setPos=(t=>{this.mPos=t}),this.setTip=(t=>{this.mTip=t}),this.setValue1=(t=>{this.mValue1=t}),this.getValue1=(()=>this.mValue1),this.setValue1Pos=(t=>{this.mValue1Pos=t}),this.setValue2=(t=>{this.mValue2=t}),this.getValue2=(()=>this.mValue2),this.setValue2Pos=(t=>{this.mValue2Pos=t}),this.setShow=(t=>{this.misShow=t}),this.getData=(()=>{if(!this.misShow)return;let t={list:[{value:"",readonly:!0},{value:"",readonly:!1},{value:"",readonly:!1}],pos:this.mPos,postype:MxInputPostionType.kRelative};return this.mType!=MxInputType.kNoInput?(this.mType==MxInputType.kXYCoordInput?(t.list[0].show=!0,t.list[0].value=this.mTip,t.list[0].readonly=!0,t.list[1].show=!0,t.list[1].value=this.mValue1,t.list[1].readonly=!1,t.list[2].show=!0,t.list[2].value=this.mValue2,t.list[2].readonly=!1):this.mType==MxInputType.kDistanceInput?(t.list[0].show=!0,t.list[0].value=this.mTip,t.list[0].readonly=!0,t.list[1].show=!0,t.list[1].value=this.mValue1,t.list[1].readonly=!1,t.list[1].pos=this.mValue1Pos,t.list[2].show=!0,t.list[2].value=this.mValue2,t.list[2].readonly=!0,t.list[2].pos=this.mValue2Pos,t.postype=MxInputPostionType.kAbsolutely):this.mType==MxInputType.kDynTip?(t.list[0].show=!0,t.list[0].value=this.mTip,t.list[0].readonly=!0,t.list[1].show=!1,t.list[2].show=!1):t=void 0,t):void 0})}}const CursorType={kNormal:"Normal",kRect:"Rect",kCross:"Cross"};export class MxVueInterface{constructor(){this.mSetCoordFun=void 0,this.mUpdateCursorFun=void 0,this.mOnKeydownEvent=void 0,this.mCursorType=CursorType.kNormal,this.mComandLine=new MxVueComandLine,this.mdynamicInput=new MxDynamicInput,this.mMxEvents={},this.mountSetCoordFun=(t=>{this.mSetCoordFun=t}),this.mountUpdateCursorFun=(t=>{this.mUpdateCursorFun=t}),this.mountKeydownEvent=(t=>{this.mOnKeydownEvent=t}),this.onKeydown=(t=>{void 0!=this.mOnKeydownEvent&&this.mOnKeydownEvent(t)}),this.setTipCoord=(t=>{void 0!=this.mSetCoordFun&&this.mSetCoordFun(t)}),this.getCursorType=(()=>this.mCursorType),this.setCursorType=(t=>{if("number"==typeof t)switch(t){case 0:this.mCursorType=CursorType.kNormal;break;case 1:this.mCursorType=CursorType.kRect;break;case 2:this.mCursorType=CursorType.kCross}else this.mCursorType=t;void 0!=this.mUpdateCursorFun&&this.mUpdateCursorFun(this.mCursorType)}),this.getTitle=(()=>this.mTitle),this.getTopButtonBarData=(()=>this.mTopButtonBarData),this.getMenuBarData=(()=>this.mMenuBarData),this.getRighButtonBarData=(()=>this.mRighButtonBarData),this.getLeftButtonBarData=(()=>this.mLeftButtonBarData),this.getTitleButtonBarData=(()=>this.mTitleButtonBarData),this.getLayerComboxData=(()=>this.mLayerComboxData),this.getColorComboxData=(()=>this.mColorComboxData),this.getLinetypeComboxData=(()=>this.mLinetypeComboxData),this.getFooterData=(()=>this.mFooterData),this.sendStringToExecute=(t=>{this.mxFunObject.sendStringToExecute(t)}),this.getCmdLine=(()=>this.mComandLine),this.getDynamicInput=(()=>this.mdynamicInput),this.init=(t=>{this.mxFunObject=t}),this.OnMxEvent=(t=>{const s=t.name;if(void 0==s)return;const i=this.mMxEvents[s];void 0!=i&&i(t.param)}),this.mountMxEvent=((t,s)=>{this.mMxEvents[t]=s})}};const mxUiData=new MxVueInterface;export default mxUiData;