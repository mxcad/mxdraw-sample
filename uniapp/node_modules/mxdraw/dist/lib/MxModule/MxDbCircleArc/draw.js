var __awaiter=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))(function(o,i){function a(t){try{s(n.next(t))}catch(t){i(t)}}function c(t){try{s(n.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(a,c)}s((n=n.apply(t,e||[])).next())})};import MxDbCircleArc from".";import McEdGetPointWorldDrawObject from"../McEdGetPointWorldDrawObject";import MrxDbgUiPrPoint from"../MrxDbgUiPrPoint";import MxFun from"../MxFun";export default function drawMxDbCircleArc(){const t=new MrxDbgUiPrPoint,e=MxFun.getCurrentDraw(),r=new McEdGetPointWorldDrawObject;let n=new MxDbCircleArc;n.stroke="#ff0000",t.setUserDraw(r),t.setMessage("\n确定圆弧中点:"),t.go(()=>__awaiter(this,void 0,void 0,function*(){n.center=t.value(),r.setDraw(t=>{r.drawLine(n.center,t)}),t.setMessage("\n确定圆弧开始点:"),n.startPoint=(yield t.go())||new THREE.Vector3,r.setDraw(t=>{n.endPoint=t,r.drawCustomEntity(n)}),t.setMessage("\n确定圆弧结束点:"),n.endPoint=(yield t.go())||new THREE.Vector3,r.setDraw(()=>{}),e.addMxEntity(n)}))};