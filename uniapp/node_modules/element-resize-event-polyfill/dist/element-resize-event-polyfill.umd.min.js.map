{"version":3,"sources":["webpack://element-resize-event-polyfill/webpack/universalModuleDefinition","webpack://element-resize-event-polyfill/webpack/bootstrap","webpack://element-resize-event-polyfill/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://element-resize-event-polyfill/(webpack)/buildin/global.js","webpack://element-resize-event-polyfill/./node_modules/current-script-polyfill/currentScript.js","webpack://element-resize-event-polyfill/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://element-resize-event-polyfill/./index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","length","configurable","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","window","document","global$1","global","Math","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","g","e","currentScript","scripts","getElementsByTagName","Error","err","res","exec","stack","src","readyState","match","EventTarget","createHTMLEvent","type","event","createEvent","initEvent","EventListenerWrapper","registerEvent","initObserver","initialized","elm","dispatchEvent","onresize","HTMLElement","Reflect","handler","_onresize"],"mappings":"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","file":"element-resize-event-polyfill.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"element-resize-event-polyfill\"] = factory();\n\telse\n\t\troot[\"element-resize-event-polyfill\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fae3\");\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// document.currentScript polyfill by Adam Miller\n\n// MIT license\n\n(function(document){\n  var currentScript = \"currentScript\",\n      scripts = document.getElementsByTagName('script'); // Live NodeList collection\n\n  // If browser needs currentScript polyfill, add get currentScript() to the document object\n  if (!(currentScript in document)) {\n    Object.defineProperty(document, currentScript, {\n      get: function(){\n\n        // IE 6-10 supports script readyState\n        // IE 10+ support stack trace\n        try { throw new Error(); }\n        catch (err) {\n\n          // Find the second match for the \"at\" string to get file src url from stack.\n          // Specifically works with the format of stack traces in IE.\n          var i, res = ((/.*at [^\\(]*\\((.*):.+:.+\\)$/ig).exec(err.stack) || [false])[1];\n\n          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag\n          for(i in scripts){\n            if(scripts[i].src == res || scripts[i].readyState == \"interactive\"){\n              return scripts[i];\n            }\n          }\n\n          // If no match, return null\n          return null;\n        }\n      }\n    });\n  }\n})(document);\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    require('current-script-polyfill')\n  }\n\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import ResizeObserver from 'resize-observer-polyfill'\n\nconst addEventListener = EventTarget.prototype.addEventListener\n\nconst createHTMLEvent = function(type) {\n  const event = document.createEvent('HTMLEvents')\n  event.initEvent(type)\n  return event\n}\n\nexport const EventListenerWrapper = function addEventListenerWrapper(type) {\n  \n  if (type === 'resize') {\n    registerEvent(this)\n  }\n\n  addEventListener.apply(this, arguments)\n}\nfunction initObserver(callback) {\n  const observer = (initObserver.observer =\n    initObserver.observer || new ResizeObserver(callback))\n  observer.initialized = true\n\n  return observer\n}\n\nfunction registerEvent(elm) {\n  const observer = initObserver(entries => {\n    if (observer.initialized) {\n      observer.initialized = false\n      return\n    }\n    for (let entry of entries) {\n      const event = createHTMLEvent('resize')\n      entry.target.dispatchEvent(event)\n      if (\n        entry &&\n        entry.target &&\n        typeof entry.target.onresize === 'function'\n      ) {\n        entry.target.onresize(event)\n      }\n      // console.log('dispatch-event-resize')\n    }\n  })\n\n  observer.observe(elm)\n}\nHTMLElement.prototype.addEventListener = EventListenerWrapper\n\nReflect.defineProperty(HTMLElement.prototype, 'onresize', {\n  set(handler) {\n    this._onresize = handler\n    if (typeof handler !== 'function') {\n      return\n    }\n    registerEvent(this)\n  },\n  get() {\n    return this._onresize || null\n  },\n})\n"],"sourceRoot":""}