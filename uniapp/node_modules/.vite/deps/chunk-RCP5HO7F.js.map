{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxDbPolyline/draw.js", "../../mxdraw/dist/lib/MxModule/MxDbPolyline/index.js"],
  "sourcesContent": ["import MxDbPolyline from\".\";import McEdGetPointWorldDrawObject from\"../McEdGetPointWorldDrawObject\";import MrxDbgUiPrPoint from\"../MrxDbgUiPrPoint\";import MxFun from\"../MxFun\";export default function drawMxDbPolyline(){const e=new MrxDbgUiPrPoint;e.setMessage(\"\\n指定第一点:\");let t,r=new MxDbPolyline;e.go(o=>{if(0!=o)return;let n=e.value();t||(t=n.clone());let s=n;const i=new McEdGetPointWorldDrawObject;i.setDraw((e,t)=>{t.setColor(16711680),t.drawLine(s,e),t.drawCustomEntity(r)}),e.setUserDraw(i),e.setMessage(\"\\n指定下一点:\");let d=0;r.addVertexAt(n),e.goWhile(t=>{if(0==t)s=e.value(),r.addVertexAt(s),++d>=2?(e.setMessage(\"\\n指定下一点:\"),e.setKeyWords(\"[闭合(C)/放弃(U)]\")):d>0?(e.setMessage(\"\\n指定下一点:\"),e.setKeyWords(\"[放弃(U)]\")):(e.setMessage(\"\\n指定第一点:\"),e.setKeyWords(\"\"));else if(1==t){if(e.isKeyWordPicked(\"C\"))return{exit:!0};e.isKeyWordPicked(\"U\")&&console.log(\"Mx_Line undo....\")}},()=>{MxFun.getCurrentDraw().addMxEntity(r)})})};", "import{addRegisterMxDbEntity}from\"../../tools/registerMxDbEntity\";import MxDbEntity from\"../MxDbEntity\";import drawMxDbPolyline from\"./draw\";class MxDbPolyline extends MxDbEntity{constructor(){super(...arguments),this.points=[]}getTypeName(){return\"MxDbPolyline\"}worldDraw(t){this.points.length<2||t.drawLines(this.points)}getGripPoints(){return this.points}moveGripPointsAt(t,i){return!(t>=this.points.length)&&(this.points[t].add(i),!0)}create(){return new MxDbPolyline}dwgIn(t){this.onDwgIn(t);let i=t.points;return this.points=[],i.forEach(t=>{this.points.push(new THREE.Vector3(t.x,t.y,t.z))}),!0}dwgOut(t){return this.onDwgOut(t),t.points=this.points,t}addVertexAt(t){this.points.push(t)}numVerts(){return this.points.length}getPointAt(t){return t<this.points.length?this.points[t]:null}setPointAt(t,i){return t<this.points.length&&(this.points[t]=i,!0)}}MxDbPolyline.cmd=\"Mx_Lines\",MxDbPolyline.draw=drawMxDbPolyline,addRegisterMxDbEntity(MxDbPolyline);export default MxDbPolyline;"],
  "mappings": ";;;;;;;;;AAA+L,SAAR,mBAAmC;AAAC,QAAM,IAAE,IAAI;AAAgB,IAAE,WAAW,UAAU;AAAE,MAAI,GAAE,IAAE,IAAI;AAAa,IAAE,GAAG,OAAG;AAAC,QAAG,KAAG;AAAE;AAAO,QAAI,IAAE,EAAE,MAAM;AAAE,UAAI,IAAE,EAAE,MAAM;AAAG,QAAI,IAAE;AAAE,UAAM,IAAE,IAAI;AAA4B,MAAE,QAAQ,CAACA,IAAEC,OAAI;AAAC,MAAAA,GAAE,SAAS,QAAQ,GAAEA,GAAE,SAAS,GAAED,EAAC,GAAEC,GAAE,iBAAiB,CAAC;AAAA,IAAC,CAAC,GAAE,EAAE,YAAY,CAAC,GAAE,EAAE,WAAW,UAAU;AAAE,QAAI,IAAE;AAAE,MAAE,YAAY,CAAC,GAAE,EAAE,QAAQ,CAAAA,OAAG;AAAC,UAAG,KAAGA;AAAE,YAAE,EAAE,MAAM,GAAE,EAAE,YAAY,CAAC,GAAE,EAAE,KAAG,KAAG,EAAE,WAAW,UAAU,GAAE,EAAE,YAAY,eAAe,KAAG,IAAE,KAAG,EAAE,WAAW,UAAU,GAAE,EAAE,YAAY,SAAS,MAAI,EAAE,WAAW,UAAU,GAAE,EAAE,YAAY,EAAE;AAAA,eAAW,KAAGA,IAAE;AAAC,YAAG,EAAE,gBAAgB,GAAG;AAAE,iBAAM,EAAC,MAAK,KAAE;AAAE,UAAE,gBAAgB,GAAG,KAAG,QAAQ,IAAI,kBAAkB;AAAA,MAAC;AAAA,IAAC,GAAE,MAAI;AAAC,oBAAM,eAAe,EAAE,YAAY,CAAC;AAAA,IAAC,CAAC;AAAA,EAAC,CAAC;AAAC;;;ACAhxB,IAAM,eAAN,cAA2B,WAAU;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,SAAO,CAAC;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,WAAM;AAAA,EAAc;AAAA,EAAC,UAAU,GAAE;AAAC,SAAK,OAAO,SAAO,KAAG,EAAE,UAAU,KAAK,MAAM;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK;AAAA,EAAM;AAAA,EAAC,iBAAiB,GAAE,GAAE;AAAC,WAAM,EAAE,KAAG,KAAK,OAAO,YAAU,KAAK,OAAO,CAAC,EAAE,IAAI,CAAC,GAAE;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,IAAI;AAAA,EAAY;AAAA,EAAC,MAAM,GAAE;AAAC,SAAK,QAAQ,CAAC;AAAE,QAAI,IAAE,EAAE;AAAO,WAAO,KAAK,SAAO,CAAC,GAAE,EAAE,QAAQ,CAAAC,OAAG;AAAC,WAAK,OAAO,KAAK,IAAI,MAAM,QAAQA,GAAE,GAAEA,GAAE,GAAEA,GAAE,CAAC,CAAC;AAAA,IAAC,CAAC,GAAE;AAAA,EAAE;AAAA,EAAC,OAAO,GAAE;AAAC,WAAO,KAAK,SAAS,CAAC,GAAE,EAAE,SAAO,KAAK,QAAO;AAAA,EAAC;AAAA,EAAC,YAAY,GAAE;AAAC,SAAK,OAAO,KAAK,CAAC;AAAA,EAAC;AAAA,EAAC,WAAU;AAAC,WAAO,KAAK,OAAO;AAAA,EAAM;AAAA,EAAC,WAAW,GAAE;AAAC,WAAO,IAAE,KAAK,OAAO,SAAO,KAAK,OAAO,CAAC,IAAE;AAAA,EAAI;AAAA,EAAC,WAAW,GAAE,GAAE;AAAC,WAAO,IAAE,KAAK,OAAO,WAAS,KAAK,OAAO,CAAC,IAAE,GAAE;AAAA,EAAG;AAAC;AAAC,aAAa,MAAI,YAAW,aAAa,OAAK,kBAAiB,sBAAsB,YAAY;AAAE,IAAO,uBAAQ;",
  "names": ["e", "t", "t"]
}
