{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxDbArea/draw.js", "../../mxdraw/dist/lib/MxModule/MxDbArea/index.js"],
  "sourcesContent": ["import MxDbArea from\".\";import McEdGetPointWorldDrawObject from\"../McEdGetPointWorldDrawObject\";import MrxDbgUiPrPoint from\"../MrxDbgUiPrPoint\";import MxFun from\"../MxFun\";export default function drawMxDbArea(){const t=new MrxDbgUiPrPoint;t.setMessage(\"\\n指定第一点:\"),t.go(r=>{if(0!=r)return;const e=t.value();let o=new MxDbArea;o.addPoint(e);const n=new McEdGetPointWorldDrawObject;n.setDraw((t,r)=>{let e=o.clone();e.addPoint(t),n.drawCustomEntity(e)}),t.setUserDraw(n),t.setMessage(\"\\n指定下一点:\"),t.goWhile(r=>{if(0==r){const r=t.value();o.addPoint(r)}},t=>{o.isFill=!0,o.fillOpacity=.7,o.fillColor=6697540,MxFun.getCurrentDraw().addMxEntity(o)})})};", "import{addRegisterMxDbEntity}from\"../../tools/registerMxDbEntity\";import McGeTool from\"../McGeTool\";import McGiWorldDrawType from\"../McGiWorldDrawType\";import MxDbEntity from\"../MxDbEntity\";import MxDbHatch from\"../MxDbHatch\";import MxFun from\"../MxFun\";import MxThreeJS from\"../MxThreeJS\";import drawMxDbArea from\"./draw\";class MxDbArea extends MxDbEntity{constructor(){super(...arguments),this.points=[],this.isFill=!1,this.fillColor=6697540,this.fillOpacity=.7}getTypeName(){return\"MxDbArea\"}create(){return new MxDbArea}getDimText(){return McGeTool.calcArea(this.points).toFixed(2)}worldDraw(t){if(this.points.length<3)return void(2==this.points.length&&t.drawLine(this.points[0],this.points[1]));let i=this.points[0],r=i.clone(),e=i.clone(),o=this.points.length;for(let s=1;s<o;s++){let o=this.points[s];r.x>o.x&&(r.x=o.x),r.y>o.y&&(r.y=o.y),e.x<o.x&&(e.x=o.x),e.y<o.y&&(e.y=o.y),t.drawLine(i,o),i=o}t.drawLine(i,this.points[0]);let s=new THREE.Vector3(r.x+.5*(e.x-r.x),r.y+.5*(e.y-r.y));const n=t.getColor();let l=MxFun.screenCoordLong2Doc(20),p=MxThreeJS.creatTextSprite(this.getDimText(),s,l,0,n);if(null!=p&&t.drawEntity(p),t.getType()==McGiWorldDrawType.kWorldDraw&&this.isFill){t.setColor(this.fillColor),t.setOpacity(this.fillOpacity),t.setRenderOrder(t.getRenderOrder()-1);const i=new MxDbHatch;i.points=this.points,i.worldDraw(t)}}getGripPoints(){return this.points}moveGripPointsAt(t,i){return!(t>=this.points.length)&&(this.points[t].add(i),!0)}dwgIn(t){this.onDwgIn(t);let i=t.points;return this.points=[],i.forEach(t=>{this.points.push(new THREE.Vector3(t.x,t.y,t.z))}),this.dwgInHelp(t,[\"isFill\",\"fillColor\",\"fillOpacity\"]),!0}dwgOut(t){return this.onDwgOut(t),t.points=this.points,this.dwgOutHelp(t,[\"isFill\",\"fillColor\",\"fillOpacity\"]),t}addPoint(t){this.points.push(t.clone())}getPoints(){return this.points}clearPoint(){this.points=[]}}MxDbArea.cmd=\"Mx_Area\",MxDbArea.draw=drawMxDbArea,addRegisterMxDbEntity(MxDbArea);export default MxDbArea;"],
  "mappings": "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",
  "names": ["t", "r", "e", "s", "o", "i", "t"]
}
