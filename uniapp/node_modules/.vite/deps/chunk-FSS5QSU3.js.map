{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxDbEllipseShape/index.js"],
  "sourcesContent": ["import MxDbShape from\"../MxDbShape\";export default class MxDbEllipseShape extends MxDbShape{constructor(){super(),this.center=new THREE.Vector3,this.xRadius=10,this.yRadius=10,this.startAngle=0,this.endAngle=2*Math.PI,this.clockwise=!1,this.rotation=0,this.isClosedToCenter=!0,this._propertyDbKeys=[...this._propertyDbKeys,\"center\",\"xRadius\",\"yRadius\",\"startAngle\",\"endAngle\",\"clockwise\",\"rotation\",\"isClosedToCenter\"]}getTypeName(){return\"MxDbEllipseShape\"}setCenter(t){return this.center=t,this}setXRadius(t){return this.xRadius=t,this}setYRadius(t){return this.yRadius=t,this}setStartAngle(t){return this.startAngle=t,this}setEndAngle(t){return this.endAngle=t,this}setClockwise(t){return this.clockwise=t,this}setRotation(t){return this.rotation=t,this}setIsClosedToCenter(t){return this.isClosedToCenter=t,this}worldDraw(t){this.drawEllipseShape(t)}drawEllipseShape(t){let{startAngle:e,endAngle:s,clockwise:i}=this;const r=this.createEllipseCurve(),n=this.createPaths(r);let a,h=this.getShapePoints(n);return this._draw(t,h),this._drawStoreLine(t,h),{centralAngle:a=i?s>e?THREE.MathUtils.radToDeg(r.aEndAngle-r.aStartAngle):360-Math.abs(THREE.MathUtils.radToDeg(r.aEndAngle-r.aStartAngle)):e>s?Math.abs(THREE.MathUtils.radToDeg(r.aEndAngle-r.aStartAngle)):360-THREE.MathUtils.radToDeg(r.aEndAngle-r.aStartAngle),curve:r,points:h}}createEllipseCurve(t=this.center.x,e=this.center.y,s=this.xRadius,i=this.yRadius,r=this.startAngle,n=this.endAngle,a=this.clockwise,h=this.rotation){return new THREE.EllipseCurve(t,e,s,i,r,n,a,h)}getCornerRadiusPoints(t){return t}getClosedPoints(t){try{let e=(this._paths||new THREE.CatmullRomCurve3(t,!1,\"catmullrom\",0)).getLength();this.closedLine=this.getClosedLine(t);const s=this.closedLine.getLength();let i=this.curveSegments/e,r=2.5*(e>this.curveSegments?s*i:1);if(r>20*this.curveSegments&&(r=20*this.curveSegments),r<=0)return t;const n=this.closedLine.getPoints(r);return[...t,...n]}catch(e){return[...t,t[0]]}}getClosedLine(t){const{isClosedToCenter:e,center:s}=this;let i=e?[t[t.length-1],s,t[0]]:[t[t.length-1],t[0]];return new THREE.CatmullRomCurve3(i,!1,\"catmullrom\",.01)}getGripPoints(){return[this.center]}moveGripPointsAt(t,e){return 0===t&&this.center.add(e),!0}};"],
  "mappings": "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",
  "names": []
}
