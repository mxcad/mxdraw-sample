{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxFilters/index.js", "../../mxdraw/dist/lib/MxModule/MxDbShape/index.js"],
  "sourcesContent": ["export default class MxFilters{constructor(){this.uniformObj={},this.filtersStr=\"\",this.filtersTypes=\"\",this.VSHADER_SOURCE=\"\\n  varying vec2 v_Uv; \\n  void main () {\\n      v_Uv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n  }\\n  \",this.FSHADER_SOURCE=`\\n  varying vec2 v_Uv;\\n  uniform sampler2D e_Texture;\\n  uniform mat4 colorMatrix;\\n  ${this.filtersStr}\\n  void main () {\\n    vec4 color = texture2D( e_Texture, v_Uv );\\n    color = color * colorMatrix;\\n    ${this.filtersTypes}\\n    gl_FragColor = color;\\n  }`,this._matrix=new THREE.Matrix4}channel({r:t=1,g:r=1,b:i=1}){return this._matrix=(new THREE.Matrix4).set(t,0,0,0,0,r,0,0,0,0,i,0,0,0,0,1).multiply(this._matrix),this}brightness(t){return this._matrix=(new THREE.Matrix4).set(t,0,0,0,0,t,0,0,0,0,t,0,0,0,0,1).multiply(this._matrix),this}saturate(t){const r=.2126*(1-t),i=.7152*(1-t),e=.0722*(1-t);return this._matrix=(new THREE.Matrix4).set(r+t,i,e,0,r,i+t,e,0,r,i,e+t,0,0,0,0,1).multiply(this._matrix),this}contrast(t){const r=.5*(1-t);return this._matrix=(new THREE.Matrix4).set(t,0,0,0,0,t,0,0,0,0,t,0,r,r,r,1).multiply(this._matrix),this}opacity(t){return this._matrix=(new THREE.Matrix4).set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,t).multiply(this._matrix),this}invert(t){const r=1-2*t;return this._matrix=(new THREE.Matrix4).set(r,0,0,0,0,r,0,0,0,0,r,0,t,t,t,1).multiply(this._matrix),this}grayscale(t=1){const r=.2126*t,i=.7152*t,e=.0722*t;return this._matrix=(new THREE.Matrix4).set(r+1-t,i,e,0,r,i+1-t,e,0,r,i,e+1-t,0,0,0,0,1).multiply(this._matrix),this}sepia(t=1){return this._matrix=(new THREE.Matrix4).set(1-.607*t,.769*t,.189*t,0,.349*t,1-.314*t,.168*t,0,.272*t,.534*t,1-.869*t,0,0,0,0,1).multiply(this._matrix),this}hueRotate(t){const r=t/180*Math.PI,i=Math.cos(r),e=Math.sin(r);return this._matrix=(new THREE.Matrix4).set(.2126+.7874*i+-.2126*e,.7152+-.7152*i+-.7152*e,.0722+-.0722*i+.9278*e,0,.2126+-.2126*i+.143*e,.7152+i*(1-.7152)+.14*e,.0722+-.0722*i+-.283*e,0,.2126+-.2126*i+-.7874*e,.7152+-.7152*i+.7152*e,.0722+.9278*i+.0722*e,0,0,0,0,1).multiply(this._matrix),this}convolution(t,r=1/9,i=521){return this.uniformObj=Object.assign(Object.assign({},this.uniformObj),{cKernel:{value:t.toArray()},stStep:{value:r},scaleFactor:{value:i}}),this.filtersTypes.indexOf(\"convolutionTextureColor\")<0&&(this.filtersStr+=\"\\n        uniform float cKernel[9];\\n        uniform float stStep;\\n        uniform float scaleFactor;\\n        vec4 convolutionTextureColor(vec4 color) {\\n            vec2 offsets[9];\\n            offsets[0] = vec2(-1.0,-1.0);\\n            offsets[1] =  vec2(0.0,-1.0);\\n            offsets[2] = vec2(1.0,-1.0);\\n            offsets[3] =  vec2(-1.0,0.0);\\n            offsets[4] = vec2(0.0,0.0);\\n            offsets[5] = vec2(1.0,0.0);\\n            offsets[6] =  vec2(-1.0,1.0);\\n            offsets[7] = vec2(0.0,1.0);\\n            offsets[8] = vec2(1.0,1.0);\\n        \\n            vec4 sum = color;\\n            for(int i = 0; i < 9; i++) {\\n                sum = sum + cKernel[i] * scaleFactor * texture2D(e_Texture, v_Uv + offsets[i] / stStep);\\n            };\\n            return sum;\\n        }\",this.filtersTypes+=\"color = convolutionTextureColor(color);\\n\"),this}reset(){return this.uniformObj={},this.filtersStr=\"\",this.filtersTypes=\"\",this._matrix=new THREE.Matrix4,this}_getFilterShaderData(t){return{uniforms:Object.assign({e_Texture:{value:t},colorMatrix:{value:this._matrix}},this.uniformObj),vertexShader:this.VSHADER_SOURCE,fragmentShader:this.FSHADER_SOURCE}}_getFilterColor(t=\"#000000\",r=1){t=new THREE.Color(t);let{r:i,g:e,b:s}=t;const n=this._matrix.toArray(),o=(n[12],n[13],n[14],n[15],n[0]*i+n[1]*i+n[2]*i+n[3]*r),a=n[4]*e+n[5]*e+n[6]*e+n[7]*r,l=n[8]*s+n[9]*s+n[10]*s+n[11]*r;return t.setRGB(o,a,l),t}toJSON(){return JSON.stringify({matrix:this._matrix.toArray(),uniformObj:this.uniformObj,filtersStr:this.filtersStr,filtersTypes:this.filtersTypes})}static fromJSON(t){const{matrix:r,uniformObj:i,filtersStr:e,filtersTypes:s}=JSON.parse(t),n=new MxFilters;return n._matrix=(new THREE.Matrix4).fromArray(r),n.uniformObj=i,n.filtersStr=e,n.filtersTypes=s,n}};", "import{getToGenerateRoundedCorners,repairGeometryFaceVertexUvs}from\"../../tools/three\";import McGeTool from\"../McGeTool\";import MxDbEntity from\"../MxDbEntity\";import MxFilters from\"../MxFilters\";import MxFun from\"../MxFun\";import MxType from\"../MxType\";export default class MxDbShape extends MxDbEntity{constructor(){super(...arguments),this.isLoadMaterialFromPath=!0,this.strokeLineWidth=2,this.isStrokeDashLine=!1,this.isFill=!1,this.curveSegments=50,this.closed=!0,this.cornerRadius=[],this._propertyDbKeys=[\"isFill\",\"stroke\",\"strokeLineWidth\",\"isStrokeDashLine\",\"closed\",\"cornerRadius\",\"fillImageSrc\",\"fillImageParam\"]}setStroke(t){return this.stroke=t,this}setStrokeLineWidth(t){return this.strokeLineWidth=t,this}setIsStrokeDashLine(t){return this.isStrokeDashLine=t,this}setIsFill(t){return this.isFill=t,this}get fillImageSrc(){return this._fillImageSrc}set fillImageSrc(t){this._fillImageSrc=t,this.isLoadMaterialFromPath=!0,this.material=null}setFillImageSrc(t){return this.fillImageSrc=t,this}setCurveSegments(t){return this.curveSegments=t,this}setClosed(t){return this.closed=t,this}setCornerRadius(t,e=!0){t instanceof Array?this.cornerRadius=t.map(t=>e?MxFun.screenCoordLong2Doc(t):t):this.cornerRadius=e?MxFun.screenCoordLong2Doc(t):t}getTypeName(){return\"MxDbShape\"}getShapePoints(t){const{curveSegments:e}=this;return this.points=t.getPoints(e).map(t=>t instanceof THREE.Vector2?new THREE.Vector3(t.x,t.y,0):t),this.points}createPaths(t){return this._paths=new THREE.CurvePath,Array.isArray(t)?t.forEach(t=>this._paths.add(t)):this._paths.add(t),this._paths}_draw(t,e){let{isFill:i,closed:s}=this;const r=t.getColor();t.setColor(this.filter?this.filter._getFilterColor(this.color,this.opacity):this.color);const o=this.getCornerRadiusPoints(s||i?this.getClosedPoints(e):e);i?!this.fillImageSrc&&t.drawSolid(o):t.drawLines(o),this._fillImg(t,o),t.setColor(r)}getCornerRadiusPoints(t){const{cornerRadius:e}=this;if(!e)return t;const i=\"number\"==typeof e?t.map(()=>e):e;return i.length>0?getToGenerateRoundedCorners(t,i):t}_drawStoreLine(t,e,i){const{isFill:s,stroke:r,strokeLineWidth:o}=this,a=t.getLineWidth(),n=t.getColor(),l=t.isDashLineDisplay();r&&s&&(t.setDashLineDisplay(this.isStrokeDashLine),t.setColor(r),t.setLineWidth(o),i?i(t):t.drawLines(this.getCornerRadiusPoints(this.getClosedPoints(e))),t.setColor(n),t.setLineWidth(a),t.setDashLineDisplay(l))}getClosedPoints(t){return[...t,t[0]]}getTotalLength(){return this._paths?this._paths.getLength()+(this.closedLine?this.closedLine.getLength():0):0}getArea(){return this.points?McGeTool.calcArea(this.closed?this.getClosedPoints(this.points):this.points):0}worldDraw(t){const e=this.createPaths(new THREE.Curve),i=this.getShapePoints(e);this._draw(t,i),this._drawStoreLine(t,i)}_fillImg(t,e){const i={transparent:!0,depthTest:!1,opacity:this.opacity,visible:this.visible};if(!this.isFill||!this.fillImageSrc)return;if(!this.material){let t=this;return void MxFun.loadImageMaterial(this.fillImageSrc,e=>{t.isLoadMaterialFromPath=!1,e&&(t.material=e,t.setNeedUpdateDisplay(),MxFun.updateDisplay())})}const s=e.map(({x:t,y:e})=>new THREE.Vector2(t,e));let r=this.material,o=new THREE.ShapeGeometry(new THREE.Shape(s));if(o=repairGeometryFaceVertexUvs(o),this.filter){const t=r.map,e=this.filter._getFilterShaderData(t);r=new THREE.ShaderMaterial(Object.assign(Object.assign({},e),i))}if(r.depthTest=!1,r.transparent=!0,r.opacity=this.opacity,r.visible=this.visible,this.fillImageParam){const t=this.fillImageParam;for(let e in this.fillImageParam){this.material.map[e]=t[e]}}let a=new THREE.Mesh(o,r);t.drawEntity(a)}getGripPoints(){return[]}moveGripPointsAt(t,e){return!0}dwgIn(t){return this.onDwgIn(t),this.dwgInHelp(t,this._propertyDbKeys),this.isLoadMaterialFromPath=!0,this.material=null,t.type===MxType.MxCloneType.kMxFileClone?t.filter&&(this.filter=MxFilters.fromJSON(t.filter)):t.filter&&(this.filter=t.filter),!0}dwgOut(t){var e;return this.onDwgOut(t),this.dwgOutHelp(t,this._propertyDbKeys),t.type===MxType.MxCloneType.kMxFileClone?this.filter&&(t.filter=null===(e=this.filter)||void 0===e?void 0:e.toJSON()):t.filter=this.filter,t}};"],
  "mappings": "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",
  "names": ["t", "e"]
}
