{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxDbEllipse/draw.js", "../../mxdraw/dist/lib/MxModule/MxDbEllipse/index.js"],
  "sourcesContent": ["import MxDbEllipse from\".\";import McEdGetPointWorldDrawObject from\"../McEdGetPointWorldDrawObject\";import MrxDbgUiPrPoint from\"../MrxDbgUiPrPoint\";import MxFun from\"../MxFun\";export default function drawMxDbEllipse(){const t=new MrxDbgUiPrPoint,r=MxFun.getCurrentDraw(),e=new McEdGetPointWorldDrawObject,o=new MxDbEllipse;t.setMessage(\"\\n点击开始绘制椭圆:\"),t.go(()=>{o.point1=t.value(),e.setDraw(t=>{o.point2=t,e.drawCustomEntity(o)}),t.setUserDraw(e),t.setMessage(\"\\n再次点击结束绘制椭圆:\"),t.go(()=>{r.addMxEntity(o)})})};", "import{addRegisterMxDbEntity}from\"../../tools/registerMxDbEntity\";import McGiWorldDrawType from\"../McGiWorldDrawType\";import MxDbEllipseShape from\"../MxDbEllipseShape\";import drawMxDbEllipse from\"./draw\";class MxDbEllipse extends MxDbEllipseShape{constructor(){super(),this.point1=new THREE.Vector3,this.point2=new THREE.Vector3,this.isClosedToCenter=!1,this.closed=!1,this._propertyDbKeys=[...this._propertyDbKeys,\"point1\",\"point2\"]}getTypeName(){return\"MxDbEllipse\"}create(){return new MxDbEllipse}setPoint1(t){return this.point1=t,this}setPoint2(t){return this.point2=t,this}worldDraw(t){const{point1:i,point2:e}=this,s=i.clone().set(e.x,i.y,e.z),r=e.clone().set(i.x,e.y,i.z);this.xRadius=i.distanceTo(s)/2,this.yRadius=i.distanceTo(r)/2;const o=i.x>e.x,p=i.y>e.y,n=o?i.x-this.xRadius:i.x+this.xRadius,l=p?i.y-this.yRadius:i.y+this.yRadius;this.center=new THREE.Vector3(n,l,0),this.drawEllipseShape(t),t.getType()===McGiWorldDrawType.kSelectDraw&&t.drawLines([i,new THREE.Vector3(i.x,e.y),e,new THREE.Vector3(e.x,i.y),i])}getGripPoints(){let t=new THREE.Vector3(.5*(this.point2.x+this.point1.x),.5*(this.point2.y+this.point1.y),0);return[this.point1,this.point2,t]}moveGripPointsAt(t,i){return 0===t?this.point1.add(i):1===t?this.point2.add(i):2===t&&(this.point1.add(i),this.point2.add(i)),!0}}MxDbEllipse.cmd=\"Mx_Ellipse\",MxDbEllipse.draw=drawMxDbEllipse,addRegisterMxDbEntity(MxDbEllipse);export default MxDbEllipse;"],
  "mappings": ";;;;;;;;;;;;;;AAA8L,SAAR,kBAAkC;AAAC,QAAM,IAAE,IAAI,mBAAgB,IAAE,cAAM,eAAe,GAAE,IAAE,IAAI,+BAA4B,IAAE,IAAI;AAAY,IAAE,WAAW,aAAa,GAAE,EAAE,GAAG,MAAI;AAAC,MAAE,SAAO,EAAE,MAAM,GAAE,EAAE,QAAQ,CAAAA,OAAG;AAAC,QAAE,SAAOA,IAAE,EAAE,iBAAiB,CAAC;AAAA,IAAC,CAAC,GAAE,EAAE,YAAY,CAAC,GAAE,EAAE,WAAW,eAAe,GAAE,EAAE,GAAG,MAAI;AAAC,QAAE,YAAY,CAAC;AAAA,IAAC,CAAC;AAAA,EAAC,CAAC;AAAC;;;ACA7S,IAAM,cAAN,cAA0B,iBAAgB;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,SAAO,IAAI,MAAM,WAAQ,KAAK,SAAO,IAAI,MAAM,WAAQ,KAAK,mBAAiB,OAAG,KAAK,SAAO,OAAG,KAAK,kBAAgB,CAAC,GAAG,KAAK,iBAAgB,UAAS,QAAQ;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,WAAM;AAAA,EAAa;AAAA,EAAC,SAAQ;AAAC,WAAO,IAAI;AAAA,EAAW;AAAA,EAAC,UAAU,GAAE;AAAC,WAAO,KAAK,SAAO,GAAE;AAAA,EAAI;AAAA,EAAC,UAAU,GAAE;AAAC,WAAO,KAAK,SAAO,GAAE;AAAA,EAAI;AAAA,EAAC,UAAU,GAAE;AAAC,UAAK,EAAC,QAAO,GAAE,QAAO,EAAC,IAAE,MAAK,IAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAE,EAAE,GAAE,EAAE,CAAC,GAAE,IAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAE,EAAE,GAAE,EAAE,CAAC;AAAE,SAAK,UAAQ,EAAE,WAAW,CAAC,IAAE,GAAE,KAAK,UAAQ,EAAE,WAAW,CAAC,IAAE;AAAE,UAAM,IAAE,EAAE,IAAE,EAAE,GAAE,IAAE,EAAE,IAAE,EAAE,GAAE,IAAE,IAAE,EAAE,IAAE,KAAK,UAAQ,EAAE,IAAE,KAAK,SAAQ,IAAE,IAAE,EAAE,IAAE,KAAK,UAAQ,EAAE,IAAE,KAAK;AAAQ,SAAK,SAAO,IAAI,MAAM,QAAQ,GAAE,GAAE,CAAC,GAAE,KAAK,iBAAiB,CAAC,GAAE,EAAE,QAAQ,MAAI,0BAAkB,eAAa,EAAE,UAAU,CAAC,GAAE,IAAI,MAAM,QAAQ,EAAE,GAAE,EAAE,CAAC,GAAE,GAAE,IAAI,MAAM,QAAQ,EAAE,GAAE,EAAE,CAAC,GAAE,CAAC,CAAC;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,QAAI,IAAE,IAAI,MAAM,QAAQ,OAAI,KAAK,OAAO,IAAE,KAAK,OAAO,IAAG,OAAI,KAAK,OAAO,IAAE,KAAK,OAAO,IAAG,CAAC;AAAE,WAAM,CAAC,KAAK,QAAO,KAAK,QAAO,CAAC;AAAA,EAAC;AAAA,EAAC,iBAAiB,GAAE,GAAE;AAAC,WAAO,MAAI,IAAE,KAAK,OAAO,IAAI,CAAC,IAAE,MAAI,IAAE,KAAK,OAAO,IAAI,CAAC,IAAE,MAAI,MAAI,KAAK,OAAO,IAAI,CAAC,GAAE,KAAK,OAAO,IAAI,CAAC,IAAG;AAAA,EAAE;AAAC;AAAC,YAAY,MAAI,cAAa,YAAY,OAAK,iBAAgB,sBAAsB,WAAW;AAAE,IAAO,sBAAQ;",
  "names": ["t"]
}
