{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxDbCloudLine/draw.js", "../../mxdraw/dist/lib/MxModule/MxDbCloudLine/index.js"],
  "sourcesContent": ["import MxDbCloudLine from\".\";import McEdGetPointWorldDrawObject from\"../McEdGetPointWorldDrawObject\";import MrxDbgUiPrPoint from\"../MrxDbgUiPrPoint\";import MxFun from\"../MxFun\";export default function drawMxDbCloudLine(){const t=new MrxDbgUiPrPoint,o=MxFun.getCurrentDraw(),e=new McEdGetPointWorldDrawObject;t.setMessage(\"\\n点击开启绘制云线:\"),t.go(()=>{const n=MxFun.screenCoordLong2Doc(16);let r=t.value();const i=new MxDbCloudLine;i.setRadius(n),i.addPoint(r),e.setDraw(t=>{r.distanceTo(t)>n&&(r=t.clone(),i.addPoint(t,!0)),e.drawCustomEntity(i)}),t.setUserDraw(e),t.setMessage(\"\\n再次点击结束绘制云线:\"),t.go(()=>{o.addMxEntity(i)})})};", "import MxDbEntity from\"../MxDbEntity\";import McGiWorldDrawType from\"../McGiWorldDrawType\";import MxType from\"../MxType\";import drawMxDbCloudLine from\"./draw\";import{addRegisterMxDbEntity}from\"../../tools/registerMxDbEntity\";const propertyDbKeys=[\"points\",\"radius\"];class MxDbCloudLine extends MxDbEntity{constructor(){super(...arguments),this.points=[],this.radius=16,this.cachePoint=null}getTypeName(){return\"MxDbCloudLine\"}create(){return new MxDbCloudLine}setRadius(t){this.radius=t}getRadius(){return this.radius}getCachePoint(){return this.cachePoint}clacNewArcDiameterPoint(t){if(0==this.points.length)return t;let e=this.points[this.points.length-1];const n=2*this.radius,i=e.distanceTo(t);if(i<n)return null;const r=n*(t.x-e.x)/i+e.x,o=n*(t.y-e.y)/i+e.y;return new THREE.Vector3(r,o,e.z)}createCloudArcCurvePoints(t,e,n){const i=new THREE.Vector3((t.x+e.x)/2,(t.y+e.y)/2,0);n||(n=i.distanceTo(t));const{startAngle:r,endAngle:o}=function(t,e,n){const i=2*Math.PI/360;return{startAngle:180*Math.atan2(e.y-t.y,e.x-t.x)/Math.PI*i,endAngle:180*Math.atan2(n.y-t.y,n.x-t.x)/Math.PI*i}}(i,t,e);return new THREE.ArcCurve(i.x,i.y,n,r,o,!0).getPoints(10)}addPoint(t,e){let n=this.clacNewArcDiameterPoint(t);n&&(this.points.push(n),this.cachePoint=null,e&&(this.cachePoint=this.reCalculateDrawGeometryPoint()))}addLine(t,e){this.addPoint(t);const n=2*this.radius;let i=this.points[this.points.length-1],r=i.distanceTo(e);const o=Math.round(r/n);for(let t=0;t<o;t++){r=i.distanceTo(e);const t=n*(e.x-i.x)/r+i.x,o=n*(e.y-i.y)/r+i.y;let s=new THREE.Vector3(t,o,e.z);this.addPoint(s),i=s}return this.points[this.points.length-1]}reCalculateDrawGeometryPoint(){if(this.points.length<2)return null;let t=this.points[0],e=this.points.length,n=[];for(let i=1;i<e;i++){let e=this.points[i];this.createCloudArcCurvePoints(t,e).forEach(t=>{n.push(new THREE.Vector3(t.x,t.y,0))}),t=e}return n}worldDraw(t){if(this.cachePoint||(this.cachePoint=this.reCalculateDrawGeometryPoint()),this.cachePoint)if(t.getType()===McGiWorldDrawType.kSelectDraw){let e=new THREE.Geometry;this.cachePoint.forEach(t=>{e.vertices.push(new THREE.Vector3(t.x,t.y,0))}),e.computeBoundingBox();const n=new THREE.Vector3;e.boundingBox.getSize(n);let i=new THREE.Vector3;e.boundingBox.getCenter(i);const r=n.x/2,o=n.y/2,s={x:i.x-r,y:i.y-o},a={x:i.x+r,y:i.y-o},c={x:i.x+r,y:i.y+o},h={x:i.x-r,y:i.y+o};t.drawLine(s.x,s.y,a.x,a.y),t.drawLine(a.x,a.y,c.x,c.y),t.drawLine(c.x,c.y,h.x,h.y),t.drawLine(h.x,h.y,s.x,s.y)}else t.drawLines(this.cachePoint)}getCenter(){const t=new THREE.Geometry;t.vertices=this.points;let e=new THREE.Vector3;return t.computeBoundingBox(),t.boundingBox.getCenter(e),e}getGripPoints(){return[this.getCenter()]}moveGripPointsAt(t,e){return this.points.forEach(t=>{t.add(e)}),this.cachePoint=null,!0}dwgIn(t){return this.onDwgIn(t),this.dwgInHelp(t,propertyDbKeys),this.cachePoint=null,!0}dwgOut(t){return this.onDwgOut(t),this.dwgOutHelp(t,propertyDbKeys),t.type===MxType.MxCloneType.kSaveDwgClone&&this.dwgOutHelp(t,[\"cachePoint\"]),t}}MxDbCloudLine.isRegister=!1,MxDbCloudLine.cmd=\"Mx_CloudLine\",MxDbCloudLine.draw=drawMxDbCloudLine,addRegisterMxDbEntity(MxDbCloudLine);export default MxDbCloudLine;"],
  "mappings": "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",
  "names": ["t", "t", "e", "n", "i", "o"]
}
