{
  "version": 3,
  "sources": ["../../mxdraw/dist/lib/MxModule/MxDbRect/draw.js", "../../mxdraw/dist/lib/MxModule/MxDbRect/index.js"],
  "sourcesContent": ["var __awaiter=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))(function(o,i){function a(t){try{s(r.next(t))}catch(t){i(t)}}function c(t){try{s(r.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n(function(t){t(e)})).then(a,c)}s((r=r.apply(t,e||[])).next())})};import MxDbRect from\".\";import McEdGetPointWorldDrawObject from\"../McEdGetPointWorldDrawObject\";import MrxDbgUiPrPoint from\"../MrxDbgUiPrPoint\";import MxFun from\"../MxFun\";export default function drawMxDbRect(){return __awaiter(this,void 0,void 0,function*(){const t=new MrxDbgUiPrPoint;t.setMessage(\"\\n指定第一点:\");let e=yield t.go();if(!e)return;let n=new MxDbRect;n.pt1=e;const r=new McEdGetPointWorldDrawObject;r.setDraw(t=>{n.pt2=t,r.drawCustomEntity(n)}),t.setBasePt(e),t.setUseBasePt(!0),t.setUserDraw(r),t.setMessage(\"\\n指定第二点:\"),(yield t.go())&&(n.pt2=t.value(),MxFun.getCurrentDraw().addMxEntity(n))})};", "import MxDbEntity from\"../MxDbEntity\";import{computeRectPoints,getToGenerateRoundedCorners,repairGeometryFaceVertexUvs}from\"../../tools/three/index\";import MxFun from\"../MxFun\";import McGiWorldDrawType from\"../McGiWorldDrawType\";import{addRegisterMxDbEntity}from\"../../tools/registerMxDbEntity\";import drawMxDbRect from\"./draw\";class MxDbRect extends MxDbEntity{constructor(){super(...arguments),this.cornerRadius=[],this.pt1=new THREE.Vector3,this.pt2=new THREE.Vector3,this.isSolidColorFill=!1,this.isLoadMaterialFromPath=!0,this.material=null}worldDraw(t){let e=computeRectPoints(this.pt1,this.pt2);if(this.cornerRadius.length>0&&(e=getToGenerateRoundedCorners(e,this.cornerRadius)),t.getType()!=McGiWorldDrawType.kWorldDraw)return e.push(e[0]),void t.drawLines(e);const i={transparent:!0,depthTest:!1,opacity:this.opacity,visible:this.visible};if(this.isSolidColorFill){let r;e=e.map(({x:t,y:e})=>new THREE.Vector2(t,e)),r=new THREE.ShapeGeometry(new THREE.Shape(e));let a=new THREE.MeshBasicMaterial(Object.assign({color:this.filter?this.filter._getFilterColor(this.color,this.opacity):new THREE.Color(this.color)},i)),s=new THREE.Mesh(r,a);t.drawEntity(s)}else if(this.fillImageSrc){if(this.material){e=e.map(({x:t,y:e})=>new THREE.Vector2(t,e));let r=this.material,a=new THREE.ShapeGeometry(new THREE.Shape(e));if(a=repairGeometryFaceVertexUvs(a),this.filter){const t=r.map;this.fillImageParam&&(this.fillImageParam.center&&(t.center=this.fillImageParam.center),this.fillImageParam.offset&&(t.offset=this.fillImageParam.offset),this.fillImageParam.repeat&&(t.repeat=this.fillImageParam.repeat),this.fillImageParam.rotation&&(t.rotation=this.fillImageParam.rotation));const e=this.filter._getFilterShaderData(t);r=new THREE.ShaderMaterial(Object.assign(Object.assign({},e),i))}r.depthTest=!1,r.transparent=!0,r.opacity=this.opacity,r.visible=this.visible;let s=new THREE.Mesh(a,r);t.drawEntity(s)}else if(this.fillImageSrc.length>0&&this.isLoadMaterialFromPath){let t=this;MxFun.loadImageMaterial(this.fillImageSrc,e=>{this.isLoadMaterialFromPath=!1,e&&(t.material=e,t.setNeedUpdateDisplay(),MxFun.updateDisplay())})}}else{let r=(new THREE.BufferGeometry).setFromPoints(e),a=new THREE.LineBasicMaterial(Object.assign({color:this.getColor()},i)),s=new THREE.LineLoop(r,a);t.drawEntity(s)}}getGripPoints(){let t=[];t.push(this.pt1);const e=new THREE.Line3(this.pt1,this.pt2);let i=new THREE.Vector3;return e.getCenter(i),t.push(i),t.push(this.pt2),t}moveGripPointsAt(t,e){return 0==t?this.pt1.add(e):1==t?(this.pt1.add(e),this.pt2.add(e)):2==t&&this.pt2.add(e),!0}dwgIn(t){return this.onDwgIn(t),this.pt1.copy(t.pt1),this.pt2.copy(t.pt2),this.isSolidColorFill=t.isSolidColorFill,this.fillImageSrc=t.fillImageSrc,this.fillImageParam=t.fillImageParam,this.cornerRadius=t.cornerRadius,this.filter=t.filter,this.isLoadMaterialFromPath=!0,this.material=null,!0}dwgOut(t){return this.onDwgOut(t),t.pt1=this.pt1,t.pt2=this.pt2,t.isSolidColorFill=this.isSolidColorFill,t.fillImageSrc=this.fillImageSrc,t.fillImageParam=this.fillImageParam,t.cornerRadius=this.cornerRadius,t.filter=this.filter,t}create(){return new MxDbRect}transformBy(t){this.pt1.applyMatrix4(t),this.pt2.applyMatrix4(t)}setRadius(t,e=!0){t instanceof Array?this.cornerRadius=t.map(t=>e?MxFun.screenCoordLong2Doc(t):t):this.cornerRadius=t>0?e?[MxFun.screenCoordLong2Doc(t),MxFun.screenCoordLong2Doc(t),MxFun.screenCoordLong2Doc(t),MxFun.screenCoordLong2Doc(t)]:[t,t,t,t]:[]}getTypeName(){return\"MxDbRect\"}getFilter(){return this.filter}setFilter(t){this.filter=t,this.isLoadMaterialFromPath=!0,this.material=null}setFillImagePath(t){this.fillImageSrc=t,this.isLoadMaterialFromPath=!0,this.material=null,this.fillImageSrc&&(this.isSolidColorFill=!1)}getFillImagePath(){return this.fillImageSrc}}MxDbRect.cmd=\"Mx_DrawRect\",MxDbRect.draw=drawMxDbRect,addRegisterMxDbEntity(MxDbRect);export default MxDbRect;"],
  "mappings": "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",
  "names": ["t", "e", "t", "e"]
}
